version: '3.8'

services:
  # Main application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    ports:
      - "6000:6000"
    environment:
      - NODE_ENV=development
      - APP_ENV="development"
      - DATABASE_URL="postgresql://postgres:v%5Dr9hQ11Oc%29o2nE0%3F0F%2A7y~%23gZf~@rentcast.cxyc4qq4qs5o.us-west-1.rds.amazonaws.com:5432/rentcast"
      - PORT=6000
      - JWT_SECRET="revara-ai-web-app-jwt-secret-test"
      - ORIGIN="https://your-production-website.com"
    depends_on:
      - db
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:6000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL database
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=rentcast
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=v%5Dr9hQ11Oc%29o2nE0%3F0F%2A7y~%23gZf~
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./prisma/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: 